{
	"info": {
		"_postman_id": "5337ee65-3258-4577-8b28-be24d9540af0",
		"name": "voting-for-restaurants",
		"description": "# 🚀 Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## 🔖 **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## 💪 Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## 💡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27653419"
	},
	"item": [
		{
			"name": "person",
			"item": [
				{
					"name": "admin",
					"item": [
						{
							"name": "admin getAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "igor123",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@ya.ru",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{root}}/admin/accounts",
									"host": [
										"{{root}}"
									],
									"path": [
										"admin",
										"accounts"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "admin get by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "igor123",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@ya.ru",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{root}}/admin/accounts/100001",
									"host": [
										"{{root}}"
									],
									"path": [
										"admin",
										"accounts",
										"100001"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "admin with votes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "igor123",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@ya.ru",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{root}}/admin/accounts/100001/with-votes",
									"host": [
										"{{root}}"
									],
									"path": [
										"admin",
										"accounts",
										"100001",
										"with-votes"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "admin delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "igor123",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@ya.ru",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{root}}/admin/accounts/100002",
									"host": [
										"{{root}}"
									],
									"path": [
										"admin",
										"accounts",
										"100002"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "admin create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "igor123",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@ya.ru",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"New account1\",\r\n    \"email\": \"New@YAHOO.com1\",\r\n    \"password\": \"12345\",\r\n    \"roleTypes\": [\r\n        \"ADMIN\",\r\n        \"REGULAR\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{root}}/admin/accounts",
									"host": [
										"{{root}}"
									],
									"path": [
										"admin",
										"accounts"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "admin put",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "igor123",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@ya.ru",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"update\",\r\n    \"email\": \"updNew@YAHOO.com\",\r\n    \"password\": \"12345\",\r\n    \"roleTypes\": [\r\n        \"ADMIN\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{root}}/admin/accounts/100002",
									"host": [
										"{{root}}"
									],
									"path": [
										"admin",
										"accounts",
										"100002"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "admin diable",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "igor123",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@ya.ru",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"update\",\r\n    \"email\": \"updNew@YAHOO.com1\",\r\n    \"password\": \"12345\",\r\n    \"roleTypes\": [\r\n        \"GUEST\",\r\n        \"ADMIN\",\r\n        \"REGULAR\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{root}}/admin/accounts/100002?enable=false",
									"host": [
										"{{root}}"
									],
									"path": [
										"admin",
										"accounts",
										"100002"
									],
									"query": [
										{
											"key": "enable",
											"value": "false"
										}
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						}
					]
				},
				{
					"name": "account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "misha123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "misha@yahoo.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/account",
							"host": [
								"{{root}}"
							],
							"path": [
								"account"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "vika123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "vika@google.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{root}}/account",
							"host": [
								"{{root}}"
							],
							"path": [
								"account"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New account\",\r\n    \"email\": \"new@YaHoO.com\",\r\n    \"password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{root}}/account",
							"host": [
								"{{root}}"
							],
							"path": [
								"account"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "12345",
									"type": "string"
								},
								{
									"key": "username",
									"value": "new@yahoo.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Edited account\",\r\n    \"email\": \"new@yahoo.com\",\r\n    \"password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{root}}/account",
							"host": [
								"{{root}}"
							],
							"path": [
								"account"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "restaurant",
			"item": [
				{
					"name": "all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/restaurants",
							"host": [
								"{{root}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "by id",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/restaurants/100007",
							"host": [
								"{{root}}"
							],
							"path": [
								"restaurants",
								"100007"
							]
						}
					},
					"response": []
				},
				{
					"name": "by id not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/restaurants/123",
							"host": [
								"{{root}}"
							],
							"path": [
								"restaurants",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "by id",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "igor123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@ya.ru",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{root}}/admin/restaurants/100006",
							"host": [
								"{{root}}"
							],
							"path": [
								"admin",
								"restaurants",
								"100006"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "igor123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@ya.ru",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Обновленный ресторан1\",\r\n    \"address\": \"Мира ул., д.1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{root}}/admin/restaurants/100007",
							"host": [
								"{{root}}"
							],
							"path": [
								"admin",
								"restaurants",
								"100007"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "igor123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@ya.ru",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Новый ресторан2\",\r\n    \"address\": \"Мира ул., д.1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{root}}/admin/restaurants",
							"host": [
								"{{root}}"
							],
							"path": [
								"admin",
								"restaurants"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "dish",
			"item": [
				{
					"name": "all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/dishes",
							"host": [
								"{{root}}"
							],
							"path": [
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/dishes/100015",
							"host": [
								"{{root}}"
							],
							"path": [
								"dishes",
								"100015"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "igor123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@ya.ru",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Новое блюдо\",\r\n    \"description\": \"Описание description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{root}}/admin/dishes",
							"host": [
								"{{root}}"
							],
							"path": [
								"admin",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "igor123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@ya.ru",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{root}}/admin/dishes/100012",
							"host": [
								"{{root}}"
							],
							"path": [
								"admin",
								"dishes",
								"100012"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "menu",
			"item": [
				{
					"name": "all by rest",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/restaurant/100005/menus",
							"host": [
								"{{root}}"
							],
							"path": [
								"restaurant",
								"100005",
								"menus"
							]
						}
					},
					"response": []
				},
				{
					"name": "all by rest bad param",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/restaurant/100005/menus/wer",
							"host": [
								"{{root}}"
							],
							"path": [
								"restaurant",
								"100005",
								"menus",
								"wer"
							]
						}
					},
					"response": []
				},
				{
					"name": "all by rest with items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/restaurant/100005/menus/with-items",
							"host": [
								"{{root}}"
							],
							"path": [
								"restaurant",
								"100005",
								"menus",
								"with-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "by rest by id with items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/restaurant/100005/menus/100009",
							"host": [
								"{{root}}"
							],
							"path": [
								"restaurant",
								"100005",
								"menus",
								"100009"
							]
						}
					},
					"response": []
				},
				{
					"name": "all between",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/menus/filter?startDate=2023-08-01&endDate=2023-10-01",
							"host": [
								"{{root}}"
							],
							"path": [
								"menus",
								"filter"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2023-08-01"
								},
								{
									"key": "endDate",
									"value": "2023-10-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "all by rest between",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/restaurant/100005/menus/filter?startDate=2023-08-01&endDate=2023-08-02",
							"host": [
								"{{root}}"
							],
							"path": [
								"restaurant",
								"100005",
								"menus",
								"filter"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2023-08-01"
								},
								{
									"key": "endDate",
									"value": "2023-08-02"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "igor123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@ya.ru",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"2023-10-31\",\r\n    \"menuItems\": [\r\n        {\r\n            \"dishId\": 100014,\r\n            \"amount\": 20.20\r\n        },\r\n        {\r\n            \"dishId\": 100015,\r\n            \"amount\": 10.10\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{root}}/admin/restaurant/100005/menus",
							"host": [
								"{{root}}"
							],
							"path": [
								"admin",
								"restaurant",
								"100005",
								"menus"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "igor123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@ya.ru",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"menuItems\": [\r\n        {\r\n            \"dishId\": 100013,\r\n            \"amount\": 55.55\r\n        },\r\n        {\r\n            \"dishId\": 100015,\r\n            \"amount\": 99.88\r\n        },\r\n        {\r\n            \"dishId\": 100016,\r\n            \"amount\": 99.99\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{root}}/admin/restaurant/100005/menus/100009",
							"host": [
								"{{root}}"
							],
							"path": [
								"admin",
								"restaurant",
								"100005",
								"menus",
								"100009"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "igor123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@ya.ru",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{root}}/admin/restaurant/100005/menus/100009",
							"host": [
								"{{root}}"
							],
							"path": [
								"admin",
								"restaurant",
								"100005",
								"menus",
								"100009"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "vote",
			"item": [
				{
					"name": "all",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "vika123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "vika@google.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/profile/votes",
							"host": [
								"{{root}}"
							],
							"path": [
								"profile",
								"votes"
							]
						}
					},
					"response": []
				},
				{
					"name": "by id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "vika123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "vika@google.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{root}}/profile/votes/100031",
							"host": [
								"{{root}}"
							],
							"path": [
								"profile",
								"votes",
								"100031"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "misha123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "misha@yahoo.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Новый ресторан2\",\r\n    \"address\": \"Мира ул., д.1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{root}}/profile/votes?restaurantId=100007",
							"host": [
								"{{root}}"
							],
							"path": [
								"profile",
								"votes"
							],
							"query": [
								{
									"key": "restaurantId",
									"value": "100007"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "misha123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "misha@yahoo.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Новый ресторан2\",\r\n    \"address\": \"Мира ул., д.1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{root}}/profile/votes?restaurantId=100005",
							"host": [
								"{{root}}"
							],
							"path": [
								"profile",
								"votes"
							],
							"query": [
								{
									"key": "restaurantId",
									"value": "100005"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "vika123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "vika@google.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{root}}/profile/votes",
							"host": [
								"{{root}}"
							],
							"path": [
								"profile",
								"votes"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "root",
			"value": "localhost:8080/api",
			"type": "string"
		}
	]
}